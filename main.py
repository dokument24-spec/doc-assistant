import telebot
from telebot import types
import datetime
import re
import os
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from docx import Document
from flask import Flask, request
import threading

BOT_TOKEN = '7640880064:AAEOqKU4mWP06Ob96K3h4VDfrIhfK164Eg0'
ADMIN_ID = 5780051172
SHEET_NAME = "DocExpress_–ó–∞—è–≤–∫–∏"

bot = telebot.TeleBot(BOT_TOKEN)
user_data = {}
current_step = {}
current_type = {}

# === Google –¢–∞–±–ª–∏—Ü—ã ===
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_name("credentials.json", scope)
client = gspread.authorize(creds)
sheet = client.open(SHEET_NAME).sheet1

# === –°—Ü–µ–Ω–∞—Ä–∏–∏ ===
scenarios = {
    "–î–æ–≥–æ–≤–æ—Ä –ø–æ–¥—Ä—è–¥–∞": [
        "–ö–∞–∫ –∑–æ–≤—É—Ç –∑–∞–∫–∞–∑—á–∏–∫–∞?",
        "–ö–∞–∫ –∑–æ–≤—É—Ç –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è?",
        "–ö–∞–∫–∏–µ —Ä–∞–±–æ—Ç—ã –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å?",
        "–î–æ –∫–∞–∫–æ–π –¥–∞—Ç—ã –Ω—É–∂–Ω–æ –≤—Å—ë —Å–¥–µ–ª–∞—Ç—å?",
        "–°–∫–æ–ª—å–∫–æ –≤—ã –¥–æ–≥–æ–≤–æ—Ä–∏–ª–∏—Å—å –∑–∞ —Ä–∞–±–æ—Ç—É?",
        "–£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏"
    ],
    "–ñ–∞–ª–æ–±–∞ –≤ –£–ö": [
        "–ù–∞ –∫–∞–∫–æ–º –∞–¥—Ä–µ—Å–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞?",
        "–ß—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ? (–æ–ø–∏—à–∏—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é —Å–≤–æ–∏–º–∏ —Å–ª–æ–≤–∞–º–∏)",
        "–ö–æ–≥–¥–∞ —ç—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å?",
        "–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞? (—Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ)",
        "–û—Å—Ç–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏"
    ],
    "–ó–∞—è–≤–ª–µ–Ω–∏–µ –≤ —Å—É–¥": [
        "–ö—Ç–æ –ø–æ–¥–∞—ë—Ç –∑–∞—è–≤–ª–µ–Ω–∏–µ (–≤–∞—à–µ –§–ò–û)?",
        "–ü—Ä–æ—Ç–∏–≤ –∫–æ–≥–æ –ø–æ–¥–∞—ë—Ç–µ –∑–∞—è–≤–ª–µ–Ω–∏–µ (–§–ò–û –æ—Ç–≤–µ—Ç—á–∏–∫–∞)?",
        "–ß—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ? –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ —Å—É—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏.",
        "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã —Å—É–¥ —Ä–µ—à–∏–ª?",
        "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
    ],
    "–ü—Ä–µ—Ç–µ–Ω–∑–∏—è –ø—Ä–æ–¥–∞–≤—Ü—É": [
        "–ì–¥–µ –∏ —á—Ç–æ –≤—ã –∫—É–ø–∏–ª–∏?",
        "–ß—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å —Å —Ç–æ–≤–∞—Ä–æ–º/—É—Å–ª—É–≥–æ–π?",
        "–ö–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ä–µ—à–∏—Ç—å —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å? (–Ω–∞–ø—Ä–∏–º–µ—Ä: –≤–æ–∑–≤—Ä–∞—Ç, –∑–∞–º–µ–Ω–∞, —Ä–µ–º–æ–Ω—Ç)",
        "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏"
    ],
    "–ê–∫—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç": [
        "–ö—Ç–æ –∑–∞–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–∞–±–æ—Ç—É? (–§–ò–û –∏–ª–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è)",
        "–ö—Ç–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ä–∞–±–æ—Ç—É? (–§–ò–û –∏–ª–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è)",
        "–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ?",
        "–ö–æ–≥–¥–∞ –±—ã–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Ä–∞–±–æ—Ç–∞?",
        "–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
    ],
    "–î–æ–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å": [
        "–ö—Ç–æ –¥–æ–≤–µ—Ä—è–µ—Ç? (–§–ò–û)",
        "–ö–æ–º—É –¥–æ–≤–µ—Ä—è–µ—Ç? (–§–ò–û)",
        "–ù–∞ –∫–∞–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–∞—ë—Ç—Å—è –¥–æ–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å?",
        "–ù–∞ –∫–∞–∫–æ–π —Å—Ä–æ–∫?",
        "–í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω"
    ],
    "–ó–∞—è–≤–ª–µ–Ω–∏–µ –æ –ø—Ä–æ–ø–∏—Å–∫–µ": [
        "–ö—Ç–æ –ø–æ–¥–∞—ë—Ç –∑–∞—è–≤–ª–µ–Ω–∏–µ (–§–ò–û)?",
        "–ö–æ–≥–æ –Ω—É–∂–Ω–æ –ø—Ä–æ–ø–∏—Å–∞—Ç—å (–§–ò–û)?",
        "–ö–∞–∫–æ–π –∞–¥—Ä–µ—Å –ø—Ä–æ–ø–∏—Å–∫–∏?",
        "–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
    ]
}

def generate_docx(doc_type, answers):
    doc = Document()
    doc.add_heading(doc_type, 0)
    for i, (q, a) in enumerate(answers, 1):
        doc.add_paragraph(f"{i}. {q}")
        doc.add_paragraph(f"   ‚û§ {a}", style='List Bullet')
    filename = f"{doc_type}_{datetime.datetime.now().strftime('%Y%m%d_%H%M%S')}.docx"
    filepath = f"/tmp/{filename}"
    doc.save(filepath)
    return filepath

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    for key in scenarios.keys():
        markup.add(types.KeyboardButton(key))
    bot.send_message(message.chat.id, "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –û—Ñ–æ—Ä–º–ª—è—Ç–æ—Ä ‚Äî —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –ø–æ–º–æ—â–Ω–∏–∫.\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏–ª–∏ –æ–ø–∏—à–∏—Ç–µ –∑–∞–¥–∞—á—É:", reply_markup=markup)

@bot.message_handler(func=lambda msg: msg.text in scenarios.keys())
def start_scenario(message):
    chat_id = message.chat.id
    current_type[chat_id] = message.text
    current_step[chat_id] = 0
    user_data[chat_id] = []
    bot.send_message(chat_id, scenarios[message.text][0])

@bot.message_handler(func=lambda msg: msg.chat.id in current_step)
def handle_response(message):
    chat_id = message.chat.id
    step = current_step[chat_id]
    scenario = scenarios[current_type[chat_id]]
    user_data[chat_id].append((scenario[step], message.text))
    step += 1
    if step < len(scenario):
        current_step[chat_id] = step
        bot.send_message(chat_id, scenario[step])
    else:
        bot.send_message(chat_id, "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –≤—Å—ë –ª–∏ –≤–µ—Ä–Ω–æ üëá")
        for q, a in user_data[chat_id]:
            bot.send_message(chat_id, f"{q}\n‚û§ {a}")
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add("‚úÖ –î–∞", "‚ùå –ù–µ—Ç")
        bot.send_message(chat_id, "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ—Ç –¥–æ–∫—É–º–µ–Ω—Ç?", reply_markup=markup)
        current_step.pop(chat_id)

@bot.message_handler(func=lambda msg: msg.text in ["‚úÖ –î–∞", "‚ùå –ù–µ—Ç"])
def confirm_send(message):
    chat_id = message.chat.id
    if message.text == "‚úÖ –î–∞":
        doc_type = current_type[chat_id]
        answers = user_data[chat_id]
        filepath = generate_docx(doc_type, answers)

        with open(filepath, "rb") as doc_file:
            bot.send_document(chat_id, doc_file)

        now = datetime.datetime.now().strftime("%Y-%m-%d %H:%M")
        sheet.append_row([now, chat_id, doc_type] + [a for _, a in answers])

        user = message.from_user
        summary = f"üì¨ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç @{user.username or '–ë–µ–∑ –Ω–∏–∫–∞'}\n\n–¢–∏–ø: {doc_type}\n"
        for q, a in answers:
            summary += f"\n{q}\n‚û§ {a}"
        bot.send_message(ADMIN_ID, summary)

        bot.send_message(chat_id, "‚úÖ –î–æ–∫—É–º–µ–Ω—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.")
    else:
        bot.send_message(chat_id, "‚ùå –û–∫, –Ω–∞—á–Ω—ë–º –∑–∞–Ω–æ–≤–æ. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞.")
        start(message)

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ===
@bot.message_handler(content_types=['voice'])
def handle_voice(message):
    bot.send_message(message.chat.id, "‚ö†Ô∏è –Ø –ø–æ–∫–∞ –Ω–µ —É–º–µ—é —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤—ã–µ. –ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ç–µ–∫—Å—Ç–æ–º üôè")

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–ª–æ–∂–µ–Ω–∏–π ===
@bot.message_handler(content_types=['document', 'photo'])
def handle_files(message):
    bot.send_message(message.chat.id, "üóÇ –§–∞–π–ª –ø–æ–ª—É—á–µ–Ω. –ù–æ –ø–æ–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –ù–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –Ω—É–∂–Ω–æ.")

# === Flask-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Webhook ===
app = Flask(__name__)

@app.route('/')
def index():
    return "–ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω."

@app.route(f'/{BOT_TOKEN}', methods=['POST'])
def webhook():
    update = telebot.types.Update.de_json(request.stream.read().decode("utf-8"), bot)
    bot.process_new_updates([update])
    return 'ok', 200

# === –ó–∞–ø—É—Å–∫ ===
if __name__ == '__main__':
    import os
    bot.remove_webhook()
    bot.set_webhook(url=f"https://flask-hello-world-<—Ç–≤–æ—è-—Å—Å—ã–ª–∫–∞>.onrender.com/{BOT_TOKEN}")
    app.run(host='0.0.0.0', port=int(os.environ.get('PORT', 8080)))
